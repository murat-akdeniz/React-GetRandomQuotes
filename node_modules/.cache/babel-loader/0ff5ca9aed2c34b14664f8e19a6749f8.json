{"ast":null,"code":"var _jsxFileName = \"D:\\\\_React\\\\weather-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport { UseFetch } from './hooks/UseFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  const {\n    data,\n    error,\n    isLoading,\n    setUrl\n  } = UseFetch();\n\n  const getContent = () => {\n    if (error) return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Error when fetching: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 23\n    }, this);\n    if (!data && isLoading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 36\n    }, this);\n    if (!data) return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/_React/weather-app/src/App.js"],"names":["React","UseFetch","App","data","error","isLoading","setUrl","getContent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,MAAqCL,QAAQ,EAAnD;;AACA,QAAMM,UAAU,GAAG,MAAM;AACvB,QAAIH,KAAJ,EAAW,oBAAO;AAAA,0CAA0BA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACX,QAAI,CAACD,IAAD,IAASE,SAAb,EAAwB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACxB,QAAI,CAACF,IAAL,EAAW,OAAO,IAAP;AACZ,GAJD;;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAZM;KAAMD,G","sourcesContent":["import React from 'react'\nimport { UseFetch } from './hooks/UseFetch'\n\nexport const App = () => {\n  const { data, error, isLoading, setUrl } = UseFetch();\n  const getContent = () => {\n    if (error) return <h2>Error when fetching: {error}</h2>\n    if (!data && isLoading) return <h2>LOADING...</h2>\n    if (!data) return null;\n  }\n  return (\n    <div>\n\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}