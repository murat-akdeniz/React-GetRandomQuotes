{"ast":null,"code":"import _slicedToArray from\"D:/_React/GetRandomQuotes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Currency from\"./components/Quotes\";import React,{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var QUOTES_API='https://api.quotable.io/random';function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),quote=_useState2[0],setQuote=_useState2[1];var getQuote=function getQuote(){fetch(QUOTES_API).then(function(res){return res.json();}).then(function(data){return setQuote(data);});};useEffect(function(){getQuote();},[]);var getNewQuote=function getNewQuote(){getQuote();};return/*#__PURE__*/_jsx(Currency,{quote:quote.content,author:quote.author,onClick:getNewQuote});}export default App;","map":{"version":3,"sources":["D:/_React/GetRandomQuotes/src/App.js"],"names":["Currency","React","useState","useEffect","QUOTES_API","App","quote","setQuote","getQuote","fetch","then","res","json","data","getNewQuote","content","author"],"mappings":"gJAAA,MAAOA,CAAAA,QAAP,KAAqB,qBAArB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,C,2CAEA,GAAMC,CAAAA,UAAU,CAAG,gCAAnB,CAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAA0BH,QAAQ,CAAC,EAAD,CAAlC,wCAAOI,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrBC,KAAK,CAACL,UAAD,CAAL,CACGM,IADH,CACQ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADX,EAEGF,IAFH,CAEQ,SAACG,IAAD,QAAUN,CAAAA,QAAQ,CAACM,IAAD,CAAlB,EAFR,EAGD,CAJD,CAMAV,SAAS,CAAC,UAAM,CACdK,QAAQ,GACT,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBN,QAAQ,GACT,CAFD,CAIA,mBACE,KAAC,QAAD,EAAU,KAAK,CAAEF,KAAK,CAACS,OAAvB,CAAgC,MAAM,CAAET,KAAK,CAACU,MAA9C,CAAsD,OAAO,CAAEF,WAA/D,EADF,CAID,CAED,cAAeT,CAAAA,GAAf","sourcesContent":["import Currency from \"./components/Quotes\"\nimport React, { useState, useEffect } from \"react\"\n\nconst QUOTES_API = 'https://api.quotable.io/random'\n\nfunction App() {\n  const [quote, setQuote] = useState('');\n\n  const getQuote = () => {\n    fetch(QUOTES_API)\n      .then(res => res.json())\n      .then((data) => setQuote(data));\n  }\n\n  useEffect(() => {\n    getQuote();\n  }, [])\n\n  const getNewQuote = () => {\n    getQuote();\n  }\n\n  return (\n    <Currency quote={quote.content} author={quote.author} onClick={getNewQuote} />\n  )\n\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}