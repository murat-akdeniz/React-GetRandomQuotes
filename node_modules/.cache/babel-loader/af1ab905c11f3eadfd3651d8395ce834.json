{"ast":null,"code":"var _jsxFileName = \"D:\\\\_React\\\\currency-convertor\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Currency from \"./components/Currency\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'https://api.exchangerate.host/latest';\nconst SECOND_URL = 'https://free.currconv.com/api/v7/countries?apiKey=63d495f3d106774402de';\n\nfunction App() {\n  _s();\n\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setToCurrency] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n  const [amount, setAmount] = useState(1);\n  console.log(`from ${fromCurrency} to: ${toCurrency} exchangerate: ${exchangeRate}`);\n  useEffect(() => {\n    fetch(BASE_URL).then(res => res.json()).then(data => {\n      //console.log(data)\n      const firstCurrency = Object.keys(data.rates)[0];\n      setCurrencyOptions([data.base, ...Object.keys(data.rates)]); //all rates keys\n\n      setFromCurrency(data.base); //anlık para birimini yakalama\n\n      setToCurrency(firstCurrency);\n      setExchangeRate(data.rates[firstCurrency]);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(SECOND_URL).then(res => res.json()).then(data => {\n      console.log(data.results);\n    });\n  }, []);\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`).then(res => res.json()).then(data => setExchangeRate(data.rates[toCurrency]));\n    }\n  }, [fromCurrency, toCurrency]);\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Currency, {\n    currencyOptions: currencyOptions,\n    selectedCurrency: fromCurrency,\n    onChangeCurrency: e => setFromCurrency(e.target.value),\n    onChangeAmount: handleFromAmountChange,\n    amount: amount,\n    curr: toCurrency,\n    onChangeToCurrency: e => setToCurrency(e.target.value),\n    toAmount: amount * exchangeRate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xfGGdrTIqxTJGm+DiCxf49JtC6w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/_React/currency-convertor/src/App.js"],"names":["Currency","React","useState","useEffect","BASE_URL","SECOND_URL","App","currencyOptions","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","amount","setAmount","console","log","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","results","handleFromAmountChange","e","target","value"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAGA,MAAMC,QAAQ,GAAG,sCAAjB;AACA,MAAMC,UAAU,GAAG,wEAAnB;;AAIA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,EAAhD;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,EAA5C;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,EAAhD;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,CAAD,CAApC;AAEAe,EAAAA,OAAO,CAACC,GAAR,CAAa,QAAOT,YAAa,QAAOE,UAAW,kBAAiBE,YAAa,EAAjF;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK,CAACf,QAAD,CAAL,CACGgB,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd;AACA,YAAMC,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,KAAjB,EAAwB,CAAxB,CAAtB;AACAnB,MAAAA,kBAAkB,CAAC,CAACe,IAAI,CAACK,IAAN,EAAY,GAAGH,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,KAAjB,CAAf,CAAD,CAAlB,CAHc,CAG8C;;AAC5DjB,MAAAA,eAAe,CAACa,IAAI,CAACK,IAAN,CAAf,CAJc,CAIa;;AAC3BhB,MAAAA,aAAa,CAACY,aAAD,CAAb;AACAV,MAAAA,eAAe,CAACS,IAAI,CAACI,KAAL,CAAWH,aAAX,CAAD,CAAf;AAED,KAVH;AAYD,GAbQ,EAaN,EAbM,CAAT;AAcArB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK,CAACd,UAAD,CAAL,CACGe,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACM,OAAjB;AACD,KAJH;AAMD,GAPQ,EAON,EAPM,CAAT;AASA1B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,YAAY,IAAI,IAAhB,IAAwBE,UAAU,IAAI,IAA1C,EAAgD;AAC9CQ,MAAAA,KAAK,CAAE,GAAEf,QAAS,SAAQK,YAAa,YAAWE,UAAW,EAAxD,CAAL,CACGS,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAUT,eAAe,CAACS,IAAI,CAACI,KAAL,CAAWhB,UAAX,CAAD,CAFjC;AAGD;AACF,GANQ,EAMN,CAACF,YAAD,EAAeE,UAAf,CANM,CAAT;;AAUA,WAASmB,sBAAT,CAAgCC,CAAhC,EAAmC;AACjCf,IAAAA,SAAS,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD;;AAED,sBACE,QAAC,QAAD;AACE,IAAA,eAAe,EAAE1B,eADnB;AAEE,IAAA,gBAAgB,EAAEE,YAFpB;AAGE,IAAA,gBAAgB,EAAGsB,CAAD,IAAOrB,eAAe,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAH1C;AAIE,IAAA,cAAc,EAAEH,sBAJlB;AAKE,IAAA,MAAM,EAAEf,MALV;AAME,IAAA,IAAI,EAAEJ,UANR;AAOE,IAAA,kBAAkB,EAAGoB,CAAD,IAAOnB,aAAa,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAP1C;AAQE,IAAA,QAAQ,EAAElB,MAAM,GAAGF;AARrB;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA9DQP,G;;KAAAA,G;AAgET,eAAeA,GAAf","sourcesContent":["import Currency from \"./components/Currency\"\nimport React, { useState, useEffect } from \"react\"\n\n\nconst BASE_URL = 'https://api.exchangerate.host/latest'\nconst SECOND_URL = 'https://free.currconv.com/api/v7/countries?apiKey=63d495f3d106774402de'\n\n\n\nfunction App() {\n\n  const [currencyOptions, setCurrencyOptions] = useState([])\n  const [fromCurrency, setFromCurrency] = useState()\n  const [toCurrency, setToCurrency] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n  const [amount, setAmount] = useState(1);\n\n  console.log(`from ${fromCurrency} to: ${toCurrency} exchangerate: ${exchangeRate}`)\n\n\n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then((res) => res.json())\n      .then((data) => {\n        //console.log(data)\n        const firstCurrency = Object.keys(data.rates)[0];\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)]);//all rates keys\n        setFromCurrency(data.base);//anlık para birimini yakalama\n        setToCurrency(firstCurrency);\n        setExchangeRate(data.rates[firstCurrency]);\n\n      })\n\n  }, [])\n  useEffect(() => {\n    fetch(SECOND_URL)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data.results)\n      })\n\n  }, [])\n\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n        .then((res) => res.json())\n        .then((data) => setExchangeRate(data.rates[toCurrency]));\n    }\n  }, [fromCurrency, toCurrency])\n\n\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value);\n  }\n\n  return (\n    <Currency\n      currencyOptions={currencyOptions}\n      selectedCurrency={fromCurrency}\n      onChangeCurrency={(e) => setFromCurrency(e.target.value)}\n      onChangeAmount={handleFromAmountChange}\n      amount={amount}\n      curr={toCurrency}\n      onChangeToCurrency={(e) => setToCurrency(e.target.value)}\n      toAmount={amount * exchangeRate}\n    />\n  )\n\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}